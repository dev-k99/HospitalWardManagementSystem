@model IEnumerable<WardSystemProject.Models.StockTake>

@{
    ViewData["Title"] = "Stock Take History";
}

<div class="container-fluid">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-0 text-gray-800">
                <i class="bi bi-clock-history text-primary me-2"></i>Stock Take History
            </h1>
            <p class="text-muted">View complete history of all stock takes performed</p>
        </div>
        <div>
            <a asp-action="WeeklyStockTake" class="btn btn-primary">
                <i class="bi bi-plus-circle me-2"></i>New Stock Take
            </a>
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left me-2"></i>Back to Dashboard
            </a>
        </div>
    </div>

    <!-- Filter Panel -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 fw-bold text-primary">
                <i class="bi bi-funnel me-2"></i>Filters
            </h6>
        </div>
        <div class="card-body">
            <form method="get" class="row g-3">
                <div class="col-md-3">
                    <label for="wardFilter" class="form-label">Ward</label>
                    <select class="form-select" id="wardFilter" name="wardFilter">
                        <option value="">All Wards</option>
                        @if (ViewBag.Wards != null)
                        {
                            foreach (var ward in ViewBag.Wards)
                            {
                                                        <option value="@ward.Id" selected="@(Context.Request.Query["wardFilter"] == ward.Id.ToString())">
                            @ward.Name
                        </option>
                            }
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="managerFilter" class="form-label">Stock Manager</label>
                    <select class="form-select" id="managerFilter" name="managerFilter">
                        <option value="">All Managers</option>
                        @if (ViewBag.StockManagers != null)
                        {
                            foreach (var manager in ViewBag.StockManagers)
                            {
                                                        <option value="@manager.Id" selected="@(Context.Request.Query["managerFilter"] == manager.Id.ToString())">
                            @manager.FullName
                        </option>
                            }
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="dateFromFilter" class="form-label">Date From</label>
                    <input type="date" class="form-control" id="dateFromFilter" name="dateFromFilter" value="@Context.Request.Query["dateFromFilter"]">
                </div>
                <div class="col-md-3 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary me-2">
                        <i class="bi bi-search me-2"></i>Filter
                    </button>
                    <a asp-action="StockTakeHistory" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-clockwise me-2"></i>Clear
                    </a>
                </div>
            </form>
        </div>
    </div>

    <!-- Stock Take History Table -->
    <div class="card shadow">
        <div class="card-header py-3">
            <h6 class="m-0 fw-bold text-primary">
                <i class="bi bi-list-ul me-2"></i>Stock Take Records
            </h6>
        </div>
        <div class="card-body">
            @if (Model != null && Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover" id="stockTakeTable">
                        <thead class="table-dark">
                            <tr>
                                <th>
                                    <a href="#" class="text-white text-decoration-none" onclick="sortTable(0)">
                                        Date <i class="bi bi-arrow-down-up"></i>
                                    </a>
                                </th>
                                <th>
                                    <a href="#" class="text-white text-decoration-none" onclick="sortTable(1)">
                                        Ward <i class="bi bi-arrow-down-up"></i>
                                    </a>
                                </th>
                                <th>
                                    <a href="#" class="text-white text-decoration-none" onclick="sortTable(2)">
                                        Stock Manager <i class="bi bi-arrow-down-up"></i>
                                    </a>
                                </th>
                                <th>Notes</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var stockTake in Model)
                            {
                                <tr>
                                    <td>
                                        <strong>@stockTake.StockTakeDate.ToString("dd/MM/yyyy")</strong>
                                        <br><small class="text-muted">@stockTake.StockTakeDate.ToString("HH:mm")</small>
                                    </td>
                                    <td>
                                        <span class="badge bg-primary">@stockTake.Ward?.Name</span>
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <i class="bi bi-person-circle me-2"></i>
                                            <span>@stockTake.StockManager?.FullName</span>
                                        </div>
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(stockTake.Notes))
                                        {
                                            <span class="text-truncate d-inline-block" style="max-width: 200px;" title="@stockTake.Notes">
                                                @stockTake.Notes
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">No notes</span>
                                        }
                                    </td>
                                    <td>
                                        @if (stockTake.IsActive)
                                        {
                                            <span class="badge bg-success">Active</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">Inactive</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <button type="button" class="btn btn-sm btn-outline-info" 
                                                    onclick="viewStockTakeDetails(@stockTake.Id)" title="View Details">
                                                <i class="bi bi-eye"></i>
                                            </button>
                                            @if (stockTake.IsActive)
                                            {
                                                <a asp-action="EditStockTake" asp-route-id="@stockTake.Id" 
                                                   class="btn btn-sm btn-outline-warning" title="Edit">
                                                    <i class="bi bi-pencil"></i>
                                                </a>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                <nav aria-label="Stock take history pagination" class="mt-4">
                    <ul class="pagination justify-content-center">
                        <li class="page-item disabled">
                            <a class="page-link" href="#" tabindex="-1">Previous</a>
                        </li>
                        <li class="page-item active"><a class="page-link" href="#">1</a></li>
                        <li class="page-item"><a class="page-link" href="#">2</a></li>
                        <li class="page-item"><a class="page-link" href="#">3</a></li>
                        <li class="page-item">
                            <a class="page-link" href="#">Next</a>
                        </li>
                    </ul>
                </nav>

                <!-- Summary Statistics -->
                <div class="row mt-4">
                    <div class="col-md-3">
                        <div class="card bg-primary text-white">
                            <div class="card-body text-center">
                                <h5 class="card-title">Total Stock Takes</h5>
                                <h3 class="mb-0">@Model.Count()</h3>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card bg-success text-white">
                            <div class="card-body text-center">
                                <h5 class="card-title">This Month</h5>
                                <h3 class="mb-0">@Model.Count(s => s.StockTakeDate.Month == DateTime.Now.Month && s.StockTakeDate.Year == DateTime.Now.Year)</h3>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card bg-info text-white">
                            <div class="card-body text-center">
                                <h5 class="card-title">This Week</h5>
                                <h3 class="mb-0">@Model.Count(s => s.StockTakeDate >= DateTime.Now.AddDays(-7))</h3>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card bg-warning text-white">
                            <div class="card-body text-center">
                                <h5 class="card-title">Active Records</h5>
                                <h3 class="mb-0">@Model.Count(s => s.IsActive)</h3>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="bi bi-clock-history fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">No stock take records found</h5>
                    <p class="text-muted">Start by performing your first stock take</p>
                    <a asp-action="WeeklyStockTake" class="btn btn-primary">
                        <i class="bi bi-plus-circle me-2"></i>Perform First Stock Take
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<!-- Stock Take Details Modal -->
<div class="modal fade" id="stockTakeDetailsModal" tabindex="-1" aria-labelledby="stockTakeDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="stockTakeDetailsModalLabel">Stock Take Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="stockTakeDetailsContent">
                <!-- Content will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Table sorting functionality
        function sortTable(columnIndex) {
            const table = document.getElementById('stockTakeTable');
            const tbody = table.querySelector('tbody');
            const rows = Array.from(tbody.querySelectorAll('tr'));
            
            rows.sort((a, b) => {
                const aValue = a.cells[columnIndex].textContent.trim();
                const bValue = b.cells[columnIndex].textContent.trim();
                
                // Try to parse as date first
                const aDate = new Date(aValue);
                const bDate = new Date(bValue);
                
                if (!isNaN(aDate) && !isNaN(bDate)) {
                    return aDate - bDate;
                }
                
                // Otherwise sort as string
                return aValue.localeCompare(bValue);
            });
            
            // Re-append sorted rows
            rows.forEach(row => tbody.appendChild(row));
        }

        // View stock take details
        function viewStockTakeDetails(stockTakeId) {
            // This would typically make an AJAX call to get detailed information
            // For now, we'll show a placeholder
            document.getElementById('stockTakeDetailsContent').innerHTML = `
                <div class="text-center py-4">
                    <i class="bi bi-info-circle fa-3x text-muted mb-3"></i>
                    <h6 class="text-muted">Stock Take Details</h6>
                    <p class="text-muted">Detailed information for stock take ID: ${stockTakeId}</p>
                    <p class="text-muted">This could include item-by-item breakdown, discrepancies found, etc.</p>
                </div>
            `;
            
            const modal = new bootstrap.Modal(document.getElementById('stockTakeDetailsModal'));
            modal.show();
        }

        // Export to CSV functionality
        function exportToCSV() {
            const table = document.getElementById('stockTakeTable');
            const rows = Array.from(table.querySelectorAll('tr'));
            
            let csv = [];
            
            rows.forEach(row => {
                const rowData = [];
                const cells = row.querySelectorAll('td, th');
                
                cells.forEach(cell => {
                    // Remove HTML tags and get clean text
                    const text = cell.textContent.replace(/\s+/g, ' ').trim();
                    rowData.push(`"${text}"`);
                });
                
                csv.push(rowData.join(','));
            });
            
            const csvContent = csv.join('\n');
            const blob = new Blob([csvContent], { type: 'text/csv' });
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'stock_take_history.csv';
            a.click();
            window.URL.revokeObjectURL(url);
        }

        // Auto-refresh data every 5 minutes
        setInterval(function() {
            // This could be enhanced to make an AJAX call to refresh data
            console.log('Stock take history updated');
        }, 300000);
    </script>
}
