@model IEnumerable<WardSystemProject.Models.Consumable>

@{
    ViewData["Title"] = "Check Stock";
}

<div class="container mt-4">
    <div class="row mb-4">
        <div class="col-md-8">
            <h2 class="text-primary">Check Stock Levels</h2>
        </div>
        <div class="col-md-4 text-end">
            <a asp-action="CreateConsumableOrder" class="btn btn-success">
                <i class="bi bi-plus-circle"></i> Create New Order
            </a>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            <i class="bi bi-info-circle"></i> No consumables found. 
            <a asp-action="CreateConsumableOrder" class="alert-link">Create the first consumable</a>
        </div>
    }
    else
    {
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th>Consumable Name</th>
                                <th>Ward</th>
                                <th>Stock Quantity</th>
                                <th>Stock Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        <strong>@Html.DisplayFor(modelItem => item.Name)</strong>
                                    </td>
                                    <td>@Html.DisplayFor(modelItem => item.Ward.Name)</td>
                                    <td>
                                        <span class="badge @(item.QuantityOnHand > 10 ? "bg-success" : item.QuantityOnHand > 5 ? "bg-warning text-dark" : "bg-danger") fs-6">
                                            @Html.DisplayFor(modelItem => item.QuantityOnHand)
                                        </span>
                                    </td>
                                    <td>
                                        @if (item.QuantityOnHand > 10)
                                        {
                                            <span class="badge bg-success">Well Stocked</span>
                                        }
                                        else if (item.QuantityOnHand > 5)
                                        {
                                            <span class="badge bg-warning text-dark">Low Stock</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-danger">Critical</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-action="UpdateStock" asp-route-id="@item.Id" 
                                               class="btn btn-sm btn-primary" title="Update Stock">
                                                <i class="bi bi-pencil"></i>
                                            </a>
                                            <a asp-action="CreateConsumableOrder" class="btn btn-sm btn-success" title="Order More">
                                                <i class="bi bi-plus-circle"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</div>